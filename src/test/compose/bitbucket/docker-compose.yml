# docker-compose --project-name bitbucket
version: "3.0"

services:
  web:
    domainname: example.com
    hostname: bitbucket
    image: nginx:1
    depends_on:
      - pki
    links:
      - app:app
    ports:
      - 80:80
      - 443:443
    restart: on-failure
    volumes:
      - pki:/etc/ssl/private
      - cache:/var/cache/nginx
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro

  app:
    build:
      context: ../../../..
    environment:
      BITBUCKET_CONNECTOR_PROXY_NAME: bitbucket.example.com
    domainname: example.com
    hostname: bitbucket
    image: dweomer/atlassian-bitbucket
    links:
      - db:db
    ports:
      - 7999:7999
    volumes:
      - home:/var/lib/bitbucket
      - ./bitbucket.properties:/var/lib/bitbucket/shared/bitbucket.properties:ro

  db:
    image: postgres:9.4
    environment:
      POSTGRES_USER: bitbucket
      POSTGRES_PASSWORD: bitbucket
    volumes:
      - data:/var/lib/postgresql/data

  pki:
    image: alpine
    environment:
      CERT_SUBJECT: "${CERT_SUBJECT-/C=US/ST=California/L=San Francisco/O=example.com/OU=bitbucket.example.com/CN=bitbucket.example.com/emailAddress=bitbucket@example.com}"
    command: |
      /bin/sh -c '/bin/sh -s << EOF
        type openssl || apk add --no-cache openssl
        if [ ! -e server.crt ] || [ ! -e server.key ]; then
          openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout server.key -out server.crt -subj "$$CERT_SUBJECT"
        fi
      EOF
      '
    volumes:
      - pki:/etc/ssl/private
    working_dir: /etc/ssl/private

volumes:
  data:
    # external:
    #   name: bitbucket-data
  home:
    # external:
    #   name: bitbucket-home
  cache:
    # external:
    #   name: bitbucket-nginx-cache
  pki:
    # external:
    #   name: bitbucket-pki
